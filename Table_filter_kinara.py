#!/usr/bin/env python
# coding: utf-8

# In[2]:


import pandas as pd

df = pd.read_csv('/home/abdul.m@TA.COM/Downloads/business_detail.csv')
df2=pd.read_csv('/home/abdul.m@TA.COM/Downloads/individual_detail.csv')
df3=pd.read_csv('/home/abdul.m@TA.COM/Downloads/disbursement_schedule.csv')
df4=pd.read_csv('/home/abdul.m@TA.COM/Downloads/loan_application_details.csv')
df5=pd.read_csv('/home/abdul.m@TA.COM/Downloads/entity_business_detail.csv')

df6=pd.read_csv('/home/abdul.m@TA.COM/Downloads/loan_applications.csv')

df7=pd.read_csv('/home/abdul.m@TA.COM/Downloads/credit_details.csv')
df8=pd.read_csv('/home/abdul.m@TA.COM/Downloads/entity_contact_details.csv')
df9=pd.read_csv('/home/abdul.m@TA.COM/Downloads/individual_details.csv')
print(df3.head())  #DF6 DF3


# In[14]:


def IntersecOfSets(arr1, arr2):
    s1 = set(arr1)
    s2 = set(arr2)
#     s3 = set(arr3)
     
    set1 = s1.intersection(s2)       
     
#     result_set = set1.intersection(s3)
     
    final_list = list(set1)
    print(final_list,len(final_list))
IntersecOfSets(df3.columns,df6.columns)


# In[4]:


for col in df6.columns:
    if "stagename".upper() in col:
        print("yes")
    else:
        print("no")
        break
#     print(col)3---current_stage 

# stage
# individual names---
#entity_contact_details
# credit_details
#loan_application_details
#


# In[15]:


business=[]
individual=[]
disbursement=[]
loan_application_details=[]
entity_business_detail=[]
loan_applications =[]
credit_details = []
entity_contact_detail=[]
individual_detail=[]

# df = pd.read_csv('/home/abdul.m@TA.COM/Downloads/business_detail.csv')
# df2=pd.read_csv('/home/abdul.m@TA.COM/Downloads/individual_detail.csv')
# df3=pd.read_csv('/home/abdul.m@TA.COM/Downloads/disbursement_schedule.csv')
# df4=pd.read_csv('/home/abdul.m@TA.COM/Downloads/loan_application_details.csv')
# df5=pd.read_csv('/home/abdul.m@TA.COM/Downloads/entity_business_detail.csv')

# df6=pd.read_csv('/home/abdul.m@TA.COM/Downloads/loan_applications.csv')
# df7=pd.read_csv('/home/abdul.m@TA.COM/Downloads/credit_details.csv')
# df8=pd.read_csv('/home/abdul.m@TA.COM/Downloads/entity_contact_details.csv')
# df9=pd.read_csv('/home/abdul.m@TA.COM/Downloads/individual_details.csv')
for col1 in df.columns:
    business.append(col1)
for col2 in df2.columns:
    individual.append(col2)
for col3 in df3.columns:
    disbursement.append(col3)
for col4 in df4.columns:
    loan_application_details.append(col4)
for col5 in df5.columns:
    entity_business_detail.append(col5)
    
for col6 in df6.columns:
    loan_applications.append(col6)
for col7 in df7.columns:
    credit_details.append(col7)
for col8 in df8.columns:
    entity_contact_detail.append(col8)
for col9 in df9.columns:
    individual_detail.append(col9)


# In[16]:


print(business)
# print(disbursement,len(disbursement))


# In[17]:


# "CLICKS" ,"LEADS ", "Eligibility_Success_Leads" ," Qualified_Leads" ,"Screening_Approved ","Loans_Approved","Loans_Disbursedb"
# lst1=["CLICKS" ,"LEADS ", "Eligibility_Success_Leads" ," Qualified_Leads" ,"Screening_Approved ","Loans_Approved","Loans_Disbursedb","TASKNAME","dup_check","stagename","currentStage","gender","businessname","customer_name",]
lst=["businessname","LOANAPPLICATIONID","emiamount"]
for i in lst:
    if i.upper() in  business:
        print(i)
    else:
           pass
    


# In[18]:


print(credit_details,len(credit_details))


# In[19]:


# def common_member(a, b):
#     result = [i for i in a if i in b]
#     return result
# print(common_member(individual,business))


# In[20]:


print(disbursement,len(disbursement))


# In[21]:


req=["hubname","customername","businessname","loanapplicationid","spokename","loanperdixid","customertype","aadharnumber","otpverified","CREATEDAT",'UPDATEDAT',"CURRENT_STAGE","loan_secured","LOANAMOUNT",'STATUS','CUSTOMERACCEPTED','CUSTOMERELIGIBLE','APPROVEDLOANAMOUNT','LOANAMOUNTRESPONSE', 'LOANAMOUNTREASON','TOTALLOANAMOUNT','LOANPURPOSE','INTERESTRATE','TENURE','BUSINESSTYPE','LOANTYPE', 'SECTOR','BUSINESSENROLLMENTRES','SPOKENAME','CUSTOMERTYPE','EDUCATIONSTATUS','CO_APPLICANT_COUNT','APPLICANTPERDIXURN', 'NO_OF_PARTNER','BUSINESSOWNERNAME', 'LOANPERDIXID','BUSINESSPERDIXURN','AADHARNUMBER','OTPVERIFIED','PANCARDNUMBER','GSTCERTIFICATE_NO','APPLICANT_UDHYAMREGNO','APPLICATIONSOURCE','EMPLOYEECODE', 'NET_DISBURSEMENT_AMOUNT','TOTALDEDUCTIONAMOUNT','APPROVEDLOANAMOUNT','REQUESTEDLOANAMOUNT','EMIAMOUNT','REQUESTEDEMI','SECURITYEMI','ANNUALTURNOVER',]
def IntersecOfSets(arr1, arr2):
    s1 = set(arr1)
    s2 = set(arr2)
#     s3 = set(arr3)
     
    set1 = s1.intersection(s2)       
     
#     result_set = set1.intersection(s3)
     
    final_list = list(set1)
    print(final_list,len(final_list))
# IntersecOfSets(df3.columns,df6.columns)
count=0
for i in req:
    count+=1
print(count)


# In[22]:


print(df['SCD_START'],df2['SCD_START'],df3['SCD_START'])


# In[23]:


# print(df2['LOANAPPLICATIONID'])


# In[24]:


#CLICKS /LEADS / Eligibility_Success_Leads / Qualified_Leads /Screening_Approved /Loans_Approved /Loans_Disbursedb


# In[25]:


val=[]


# In[26]:


# val=['ID', 'ENTITYID', 'LOANAPPLICATIONID', 'MALEEMPLOYEES', 'FEMALEEMPLOYEES', 'BUSINESSNAME', 'BUSINESSLMSURN', 'BUSINESSLMSID', 'BUSINESSENROLLMENTRES', 'BUSINESSENROLLMENTMESSAGE', 'BUSINESSTYPE', 'SECTOR', 'SUBSECTOR', 'VINTAGE', 'FAIRLABOUR', 'WORKPLACESAFETY', 'ENVIRONMENT', 'BUSINESSREGISTEREDAS', 'GSTVALIDATEDRESPONSE', 'HAVEGST', 'GSTUSERNAME', 'GSTACCESSTYPE', 'GSTONDOCCHARGES', 'SIGNBOARDMATCHBUSINESSKYC', 'STARTINGDATEOFBUSINESS', 'SIZEOFPREMISESINSQFT', 'SAFETYMEASURESFOREMPLOYEES', 'EVIDENCEOFCHILDLABOUR', 'EXISTCUSTISAVAILABLE', 'INADEQUATESAFETYOBSERVED', 'NEGATIVEIMPLICATIONONPREMISES', 'PREMISESLOCATEDIN', 'BUSINESSINCOMMERCIALAREA', 'NOBUSINESSACTIVITY', 'OVERINDEBTEDNESS', 'BUSINESSACTIVITYTYPE', 'PREMISESPOORLYMAINTAINED', 'BUSINESSOUTOFSPOKEAREA', 'BUSINESSLOCATIONINACCESSIBLE', 'BUSINESSPROFILENEGATIVE', 'BUSINESSGENERATINGPOLLUTANTS', 'CREATEDAT', 'LOAD_TIMESTAMP', 'UPDATEDAT', 'TASKNAME', 'TASKTIMESTAMP', 'STAGENAME', 'STAGETIMESTAMP', 'DUP_CHECK', 'SCD_START', 'SCD_END', 'ID', 'ENTITY_ID', 'APPLICANT_TYPE', 'LOANAPPLICATIONID', 'FIRST_NAME', 'DATEOFBIRTH', 'EDUCATIONSTATUS', 'GENDER', 'MARRIEDSTATUS', 'SCHOOLGOINGCHILDREN', 'SCHOOLFEESPERMONTH', 'NAME_AS_PER_AADHAAR', 'NAME_AS_PER_PAN', 'NAMEMATCH_STATUS', 'POLITICALCONNECTION', 'CREATEDAT', 'UPDATEDAT', 'LOAD_TIMESTAMP', 'DUP_CHECK', 'TASKNAME', 'TASKTIMESTAMP', 'STAGENAME', 'STAGETIMESTAMP', 'SCD_START', 'SCD_END', 'ID', 'VERSION', 'SCHEDULED_DISBURSEMENT_DATE', 'ACTUAL_DISBURSEMENT_DATE', 'DISBURSEMENT_AMOUNT', 'DISBURSED_AMOUNT', 'CUSTOMER_SIGNATURE_DATE', 'CURRENT_STAGE', 'LOAN_ID', 'DISBURSEMENT_FROM_BANK_ACCOUNT_NUMBER', 'TRANCHE_NUMBER', 'IFSC_CODE', 'CUSTOMER_ACCOUNT_NUMBER', 'UDF_1', 'UDF_2', 'UDF_3', 'UDF_4', 'UDF_5', 'UDF_DATE_1', 'UDF_DATE_2', 'UDF_DATE_3', 'UDF_DATE_4', 'UDF_DATE_5', 'REMARKS', 'LATITUDE', 'LONGITUDE', 'PHOTO_IMAGE_ID', 'TRANSACTION_ID', 'REMARKS1', 'REMARKS2', 'MODE_OF_DISBURSEMENT', 'RESPONSE_CODE', 'TRANCH_CONDITION', 'CUSTOMER_BANK_NAME', 'CUSTOMER_BANK_BRANCH_NAME', 'PARTY', 'MOBILE_PHONE', 'CUSTOMER_NAME_IN_BANK', 'REFERENCE_NUMBER', 'REFERENCE_DATE', 'CHEQUE_LOG_ID', 'CREATED_BY', 'CREATED_AT', 'LAST_EDITED_BY', 'LAST_EDITED_AT', 'MORATORIUM_PERIOD_IN_DAYS', 'PRINCIPAL_DUE_PAYMENT', 'NORMAL_INTEREST_DUE_PAYMENT', 'PENAL_INTEREST_DUE_PAYMENT', 'BOOKED_NOT_DUE_NORMAL_INTEREST_PAYMENT', 'BOOKED_NOT_DUE_PENAL_INTEREST_PAYMENT', 'FEE_AMOUNT_PAYMENT', 'FP_VERIFIED', 'OVERRIDE_REQUESTED', 'OVERRIDE_STATUS', 'OVERRIDE_REQUEST_REMARKS', 'OVERRIDE_CHECKER_REMARKS', 'LINKED_ACCOUNT_TOTAL_PRINCIPAL_DUE', 'LINKED_ACCOUNT_NORMAL_INTEREST_DUE', 'LINKED_ACCOUNT_PENAL_INTEREST_DUE', 'LINKED_ACCOUNT_TOTAL_FEE_DUE', 'LINKED_ACCOUNT_PRECLOSURE_FEE', 'LINKED_ACCOUNT_SECURITY_DEPOSIT', 'MAXIMUM_STAGE_ORDER', 'DISBURSEMENT_TRANSACTION_TYPE', 'PROJECTED_DISBURSEMENT_AMOUNT', 'NET_DISBURSEMENT_AMOUNT', 'MORATORIUM_AMOUNT', 'INVOICE_NUMBER', 'LINKED_ACCOUNT_PAY_OFF_AMOUNT_WITH_DUE', 'SCD_START', 'SCD_END', 'SCD_SEQ_ID', '__HEVO__INGESTED_AT', '__HEVO__LOADED_AT', '__HEVO__MARKED_DELETED', '__HEVO__SOURCE_MODIFIED_AT', 'ID', 'LOANAPPLICATIONID', 'CUSTOMERTYPE', 'CUSTOMERELIGIBLE', 'LOANTYPE', 'LOANPURPOSE', 'REQUESTEDLOANAMOUNT', 'LOANAMOUNTREASON', 'LOAN_DECISION', 'LOAN_DECISION_REASON', 'STATUS', 'REQUEST_MESSAGE', 'REQUEST_STATUS', 'DS_RISK_SCORE', 'LOANAPPROVALSTATUS', 'LOANSECURED', 'LOANAMOUNTRESPONSE', 'APPROVELOAN_RESPONSE', 'SECURITYEMI', 'FIRSTEMIDATE', 'SHOWPARTNER_COAPP1', 'CUSTOMERACCEPTED', 'TRANSFERTO', 'INITIALREJECTCOUNT', 'SCREENINGERRORPRESENT', 'PROCESSDOCUMENTUPLOAD', 'EMPLOYEECODE', 'SPOKENAME', 'APPLICATIONSOURCE', 'ELIGIBILITYPREFFEREDLANGUAGE', 'FIELDRISKOFFICERASSIGNEE', 'INSTANCE_ID', 'A8_DEDUPE_VERIFIED', 'REJECTED', 'REJECTSTAGEREPORTING', 'SCREENINGCUST_RESULT', 'ELIGIBILITY_STATUS', 'REJECTSTAGE', 'APPLICATIONREJECTEDBY', 'APPLICATION_REJECTION_REASON', 'SCREENINGCUST_STATUS', 'APPLICATIONSTATUS', 'ANNUALTURNOVER', 'TENURE', 'INTERESTRATE', 'APPROVEDLOANAMOUNT', 'REQUESTEDEMI', 'APPROVEDEMI', 'NETDISBURSEMENTAMOUNT', 'TOTALDEDUCTIONAMOUNT', 'PROCESSINGFEES', 'GSTONPROCESSING', 'DOCUMENTATIONCHARGES', 'INSURANCEPREMIUM', 'AVERAGEADDITIONALREVENUE', 'NET_INCOME', 'VERIFIED_REVENUE', 'DEVIATION_MATRIX_RESULT', 'DEVIATION_CRITERIA_FAILED', 'LOANPERDIXID', 'LOANPERDIXURN', 'CREATEDAT', 'UPDATEDAT', 'LOAD_TIMESTAMP', 'DUP_CHECK', 'TASKNAME', 'TASKTIMESTAMP', 'STAGENAME', 'STAGETIMESTAMP', 'SCD_START', 'SCD_END', 'ID', 'VERSION', 'APPLICATIONID', 'STATUS', 'CREATEDAT', 'UPDATEDAT', 'BUSINESSPERDIXURN', 'BUSINESSPERDIXID', 'LOANPERDIXID', 'LOANPERDIXURN', 'LOANENROLLMENTRES', 'SPOKENAME', 'OTPVERIFIED', 'HUBNAME', 'CUSTOMERTYPE', 'BUSINESSNAME', 'BUSINESSOWNERNAME', 'AADHARNUMBER', 'PANCARDNUMBER', 'GSTCERTIFICATE_NO', 'APPLICANT_UDHYAMREGNO', 'NO_OF_PARTNER', 'EDUCATIONSTATUS', 'CO_APPLICANT_COUNT', 'APPLICANTPERDIXURN', 'APPLICANTPERDIXID', 'APPLICANTENROLLMENTRES', 'COAPP_FAMILYLICANTPERDIXURN', 'COAPPLICATENROLLMENTRES', 'COAPP_FAMILYLICANTPERDIXID', 'BUSINESSENROLLMENTRES', 'BUSINESSENROLLMENTMESSAGE', 'BUSINESSTYPE', 'SECTOR', 'SUBSECTOR', 'LOANTYPE', 'ANNUALTURNOVER', 'LOANPURPOSE', 'CURRENTSTAGE', 'LOANAPPROVALSTATUS', 'TENURE', 'INTERESTRATE', 'TOTALLOANAMOUNT', 'LOANAMOUNTREASON', 'LOANSECURED', 'LOANAMOUNT', 'LOANTERM', 'CUSTOMERELIGIBLE', 'LOANAMOUNTRESPONSE', 'EMIAMOUNT', 'APPROVELOAN_RESPONSE', 'SECURITYEMI', 'VINTAGE', 'MALEEMPLOYEES', 'FEMALEEMPLOYEES', 'NETDISBURSEMENTAMOUNT', 'ACCOUNTNUMBER', 'ACCOUNTHOLDERNAME', 'BANKNAME', 'BRANCHNAME', 'FIRSTEMIDATE', 'PROCESSINGFEES', 'GSTONPROCESSING', 'DOCUMENTATIONCHARGES', 'INSURANCEPREMIUM', 'BANKIFSCCODE', 'TOTALDEDUCTIONAMOUNT', 'BANKADDRESS', 'ACCOUNTTYPE', 'FAIRLABOUR', 'WORKPLACESAFETY', 'ENVIRONMENT', 'BUSINESSREGISTERED', 'SHOWPARTNER_COAPP1', 'CUSTOMERACCEPTED', 'TRANSFERTO', 'INITIALREJECTCOUNT', 'SCREENINGERRORPRESENT', 'GSTNUMBER', 'GSTVALIDATEDRESPONSE', 'HAVEGST', 'GSTUSERNAME', 'PROCESSDOCUMENTUPLOAD', 'GSTACCESSTYPE', 'GSTONDOCCHARGES', 'EMPLOYEECODE', 'ELIGIBILITYPREFFEREDLANGUAGE', 'FIELDRISKOFFICERASSIGNEE', 'APPLICANT_GSTVERIFIED_RESP', 'APPLICANT_BUSINESSREGPROOF', 'APPLICANT_UDYOGAADHAARNO', 'APPLICANT_UDHYOGREGAVAILABLE', 'GSTUSERPASSWORD', 'D9APIRESPONSEMESSAGE', 'D9APIRESPONSESTATUS', 'APPLICANT_OTHERBUSREGPROOF', 'HIDDEN_COAPP_FAMILY_EMAILADDRESS_VERIFIED_STATUS', 'TEMPA8VAR_EMAILADDRESS_VERIFIED', 'TEMPA8VAR_COAPP_FAMILY_EMAILADDRESS_VERIFIED', 'HIDDEN_EMAILADDRESS_VERIFIED_STATUS', 'COAPPLICANTNOMINEERADIO', 'LASTUPDATEDTIME', 'LOAD_TIMESTAMP', 'DUP_CHECK', 'SCD_START', 'SCD_END', 'CURRENTTASK', 'UTM_CAMPAIGN', 'APPLICATIONSOURCE', 'UTC_MEDIUM', 'UTC_SOURCE', 'SCD_SEQ_ID', '__HEVO__DATABASE_NAME', '__HEVO__INGESTED_AT', '__HEVO__LOADED_AT', '__HEVO__MARKED_DELETED', '__HEVO__SOURCE_MODIFIED_AT', 'ID', 'ENTITY_ID', 'APPLICANT_TYPE', 'LOANAPPLICATIONID', 'CREDIT_SCORE', 'DS_SCORE', 'HIGHMARK_SCORE', 'COMMERCIAL_SCORE', 'CRIF_REPORT', 'SHERLOCK_SCORE', 'SHERLOCKCASEID', 'SHERLOCKGENERATED', 'SHERLOCK_REPORT', 'LOAD_TIMESTAMP', 'DUP_CHECK', 'CREATEDAT', 'UPDATEDAT', 'TASKNAME', 'TASKTIMESTAMP', 'STAGENAME', 'STAGETIMESTAMP', 'SCD_START', 'SCD_END', 'ID', 'ENTITY_ID', 'APPLICANT_TYPE', 'CONTACT_TYPE', 'CONTACT_DETAILS', 'LOANAPPLICATIONID', 'LOAD_TIMESTAMP', 'DUP_CHECK', 'CREATEDAT', 'UPDATEDAT', 'TASKNAME', 'TASKTIMESTAMP', 'STAGENAME', 'STAGETIMESTAMP', 'SCD_START', 'SCD_END', 'ID', 'ENTITY_ID', 'APPLICANT_TYPE', 'LOANAPPLICATIONID', 'FIRST_NAME', 'DATEOFBIRTH', 'EDUCATIONSTATUS', 'GENDER', 'MARRIEDSTATUS', 'SCHOOLGOINGCHILDREN', 'SCHOOLFEESPERMONTH', 'NAME_AS_PER_AADHAAR', 'NAME_AS_PER_PAN', 'NAMEMATCH_STATUS', 'POLITICALCONNECTION', 'CREATEDAT', 'UPDATEDAT', 'LOAD_TIMESTAMP', 'DUP_CHECK', 'TASKNAME', 'TASKTIMESTAMP', 'STAGENAME', 'STAGETIMESTAMP', 'SCD_START', 'SCD_END']
req=["hubname","customername","businessname","loanapplicationid","spokename","loanperdixid","customertype","aadharnumber","otpverified","CREATEDAT",'UPDATEDAT',"CURRENT_STAGE","loan_secured","LOANAMOUNT",'STATUS','CUSTOMERACCEPTED','CUSTOMERELIGIBLE','APPROVEDLOANAMOUNT','LOANAMOUNTRESPONSE', 'LOANAMOUNTREASON','TOTALLOANAMOUNT','LOANPURPOSE','INTERESTRATE','TENURE','BUSINESSTYPE','LOANTYPE', 'SECTOR','BUSINESSENROLLMENTRES','SPOKENAME','CUSTOMERTYPE','EDUCATIONSTATUS','CO_APPLICANT_COUNT','APPLICANTPERDIXURN', 'NO_OF_PARTNER','BUSINESSOWNERNAME', 'LOANPERDIXID','BUSINESSPERDIXURN','AADHARNUMBER','OTPVERIFIED','PANCARDNUMBER','GSTCERTIFICATE_NO','APPLICANT_UDHYAMREGNO','APPLICATIONSOURCE','EMPLOYEECODE', 'NET_DISBURSEMENT_AMOUNT','TOTALDEDUCTIONAMOUNT','APPROVEDLOANAMOUNT','REQUESTEDLOANAMOUNT','EMIAMOUNT','REQUESTEDEMI','SECURITYEMI','ANNUALTURNOVER',]
def finder(numb):
    count=0
    found=[]
    n_found=[]
    for i in req:
        if i.upper() in  numb.columns:
            count+=1
            found.append(i)
        else:
               n_found.append(i)
#     return found,n_found
    print(found,len(found))
    print("")
    print(n_found,len(n_found))
#d5
print(finder(df6))
# print(len(req))
# print(found,n_found)
# new=[]
# for j in req:
#     if j not in new:
#         new.append(j)
# print(len(new))


# In[27]:


#businessname-..loanapplicationid-..--df
#approvedemi---df4
#hubname ----df5
#entity individual details----firstname--customername
# df3
# CURRENT_STAGE
# NET_DISBURSEMENT_AMOUNT

# df4
# loanapplicationid
# APPROVEDLOANAMOUNT
# APPROVEDLOANAMOUNT
# REQUESTEDLOANAMOUNT
# REQUESTEDEMI

# df5 XX
# loanapplicationid

#entity individual details----firstname--customername

#LOAN SECURED XX

n_found=['customername', 'loanapplicationid', 'CURRENT_STAGE', 'loan_secured', 'APPROVEDLOANAMOUNT', 'NET_DISBURSEMENT_AMOUNT', 'APPROVEDLOANAMOUNT', 'REQUESTEDLOANAMOUNT', 'REQUESTEDEMI'] 
n_found=[ 'COAPPLICATENROLLMENTRES'
,'COAPP_FAMILYLICANTPERDIXURN']
for i in n_found:
    if i.upper() in  df6.columns:
#             count+=1
        print(i)
    else:
        pass


# In[ ]:





# In[ ]:





# In[28]:


hubname
businessname
spokename
loanperdixid
customertype
aadharnumber
otpverified
CREATEDAT
UPDATEDAT
LOANAMOUNT
STATUS
CUSTOMERACCEPTED
CUSTOMERELIGIBLE
LOANAMOUNTRESPONSE
LOANAMOUNTREASON
TOTALLOANAMOUNT
LOANPURPOSE
INTERESTRATE
TENURE
BUSINESSTYPE
LOANTYPE
SECTOR
BUSINESSENROLLMENTRES
SPOKENAME
CUSTOMERTYPE
EDUCATIONSTATUS
CO_APPLICANT_COUNT
APPLICANTPERDIXURN
NO_OF_PARTNER
BUSINESSOWNERNAME
LOANPERDIXID
BUSINESSPERDIXURN
AADHARNUMBER
OTPVERIFIED
PANCARDNUMBER
GSTCERTIFICATE_NO
APPLICANT_UDHYAMREGNO
APPLICATIONSOURCE
EMPLOYEECODE
TOTALDEDUCTIONAMOUNT
EMIAMOUNT
SECURITYEMI
ANNUALTURNOVER


# In[29]:


for col in df6.columns:
    if 'APPROVEDLOANAMOUNT'.upper() in col:
        print("yes")
    else:
        print("no")
        break


# In[30]:


val=['LAPP.hubname,', 'LAPP.businessname,', 'LAPP.spokename,', 'LAPP.loanperdixid,', 'LAPP.customertype,', 'LAPP.aadharnumber,', 'LAPP.otpverified,', 'LAPP.CREATEDAT,', 'LAPP.UPDATEDAT,', 'LAPP.LOANAMOUNT,', 'LAPP.STATUS,', 'LAPP.CUSTOMERACCEPTED,', 'LAPP.CUSTOMERELIGIBLE,', 'LAPP.LOANAMOUNTRESPONSE,', 'LAPP.LOANAMOUNTREASON,', 'LAPP.TOTALLOANAMOUNT,', 'LAPP.LOANPURPOSE,', 'LAPP.INTERESTRATE,', 'LAPP.TENURE,', 'LAPP.BUSINESSTYPE,', 'LAPP.LOANTYPE,', 'LAPP.SECTOR,', 'LAPP.BUSINESSENROLLMENTRES,', 'LAPP.SPOKENAME,', 'LAPP.CUSTOMERTYPE,', 'LAPP.EDUCATIONSTATUS,', 'LAPP.CO_APPLICANT_COUNT,', 'LAPP.APPLICANTPERDIXURN,', 'LAPP.NO_OF_PARTNER,', 'LAPP.BUSINESSOWNERNAME,', 'LAPP.LOANPERDIXID,', 'LAPP.BUSINESSPERDIXURN,', 'LAPP.AADHARNUMBER,', 'LAPP.OTPVERIFIED,', 'LAPP.PANCARDNUMBER,', 'LAPP.GSTCERTIFICATE_NO,', 'LAPP.APPLICANT_UDHYAMREGNO,', 'LAPP.APPLICATIONSOURCE,', 'LAPP.EMPLOYEECODE,', 'LAPP.TOTALDEDUCTIONAMOUNT,', 'LAPP.EMIAMOUNT,', 'LAPP.SECURITYEMI,', 'LAPP.ANNUALTURNOVER,']
for i in val:
    print(i)


# In[ ]:





# In[31]:


req=["hubname","customername","businessname","loanapplicationid","spokename","loanperdixid","customertype","aadharnumber","otpverified","CREATEDAT",'UPDATEDAT',"CURRENT_STAGE","loan_secured","LOANAMOUNT",'STATUS','CUSTOMERACCEPTED','CUSTOMERELIGIBLE','APPROVEDLOANAMOUNT','LOANAMOUNTRESPONSE', 'LOANAMOUNTREASON','TOTALLOANAMOUNT','LOANPURPOSE','INTERESTRATE','TENURE','BUSINESSTYPE','LOANTYPE', 'SECTOR','BUSINESSENROLLMENTRES','SPOKENAME','CUSTOMERTYPE','EDUCATIONSTATUS','CO_APPLICANT_COUNT','APPLICANTPERDIXURN', 'NO_OF_PARTNER','BUSINESSOWNERNAME', 'LOANPERDIXID','BUSINESSPERDIXURN','AADHARNUMBER','OTPVERIFIED','PANCARDNUMBER','GSTCERTIFICATE_NO','APPLICANT_UDHYAMREGNO','APPLICATIONSOURCE','EMPLOYEECODE', 'NET_DISBURSEMENT_AMOUNT','TOTALDEDUCTIONAMOUNT','APPROVEDLOANAMOUNT','REQUESTEDLOANAMOUNT','EMIAMOUNT','REQUESTEDEMI','SECURITYEMI','ANNUALTURNOVER',]
for i in req:
    if i=="loan_secured":
        print(i)


# In[ ]:





# In[ ]:





# In[ ]:




